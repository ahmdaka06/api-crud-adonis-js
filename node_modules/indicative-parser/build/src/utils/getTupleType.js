"use strict";
/*
 * indicative-parser
 *
 * (c) Harminder Virk <virk@adonisjs.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
*/
Object.defineProperty(exports, "__esModule", { value: true });
const getBaseRules_1 = require("./getBaseRules");
/**
 * Returns runtime node for an array type.
 */
function getTupleType(schemas, isOptional, rules) {
    return {
        getTree() {
            const payload = {
                type: 'array',
                rules: getBaseRules_1.getBaseRules('array', isOptional)
                    .concat([{ name: 'size', args: [schemas.length] }]) // Enforce length
                    .concat(rules),
                each: {},
            };
            schemas.forEach((schema, index) => {
                const children = schema.getTree();
                if (children.type === 'array') {
                    throw new Error('2d arrays are currently not supported');
                }
                payload.each[index] = {
                    /**
                     * Nodes of array cannot be marked as required and hence `size`
                     * rule must be used on array for same
                     */
                    rules: children.rules.filter(({ name }) => name !== 'required'),
                    children: children.type === 'object' ? children.children : {},
                };
            });
            return payload;
        },
    };
}
exports.getTupleType = getTupleType;
