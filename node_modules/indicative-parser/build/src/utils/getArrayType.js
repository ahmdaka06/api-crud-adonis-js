"use strict";
/*
 * indicative-parser
 *
 * (c) Harminder Virk <virk@adonisjs.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
*/
Object.defineProperty(exports, "__esModule", { value: true });
const getBaseRules_1 = require("./getBaseRules");
const getObjectType_1 = require("./getObjectType");
/**
 * Returns runtime node for an array type.
 */
function getArrayType(schema, isOptional, rules) {
    return {
        getTree() {
            const children = typeof (schema.getTree) === 'function'
                ? schema.getTree()
                : getObjectType_1.getObjectType(schema, false).getTree();
            if (children.type === 'array') {
                throw new Error('2d arrays are currently not supported');
            }
            return {
                type: 'array',
                rules: getBaseRules_1.getBaseRules('array', isOptional).concat(rules),
                each: {
                    '*': {
                        /**
                         * Nodes of array cannot be marked as required and hence `size`
                         * rule must be used on array for same
                         */
                        rules: children.rules.filter(({ name }) => name !== 'required'),
                        children: children.type === 'object' ? children.children : {},
                    },
                },
            };
        },
    };
}
exports.getArrayType = getArrayType;
