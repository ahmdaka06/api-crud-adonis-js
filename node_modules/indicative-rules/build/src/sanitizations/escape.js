"use strict";
/**
 * @module indicative-rules
 */
Object.defineProperty(exports, "__esModule", { value: true });
const indicative_utils_1 = require("indicative-utils");
/**
 * Escapes HTML entities. Useful when you want to avoid XSS attacks.
 *
 * This method will only remove `&`, `"`, `'`, `<` and `>` characters.
 * For advance escaping make use of a 3rd party library like
 * [he](https://github.com/mathiasbynens/he) and create
 * your own sanitization rule
 *
 * ```ts
 * import { sanitizations } from 'indicative/sanitizer'
 *
 * const sanitizationRules = {
 *   message: 'escape'
 * }
 *
 * // or
 * const sanitizationRules = {
 *   message: [
 *     sanitizations.escape()
 *   ]
 * }
 * ```
 */
const escape = {
    sanitize(data, field) {
        let fieldValue = indicative_utils_1.getValue(data, field);
        if (typeof (fieldValue) !== 'string') {
            return;
        }
        fieldValue = fieldValue
            .replace(/&/g, '&amp;') // replace &
            .replace(/"/g, '&quot;') // replace "
            .replace(/'/g, '&#x27;') // replace '
            .replace(/</g, '&lt;') // replace <
            .replace(/>/g, '&gt;'); // replace >
        indicative_utils_1.patchValue(data, field, fieldValue);
    },
};
exports.default = escape;
