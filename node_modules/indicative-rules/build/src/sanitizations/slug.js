"use strict";
/**
 * @module indicative-rules
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/*
* indicative-rules
*
* (c) Harminder Virk <virk@adonisjs.com>
*
* For the full copyright and license information, please view the LICENSE
* file that was distributed with this source code.
*/
const slug_1 = __importDefault(require("@slynova/slug"));
const indicative_utils_1 = require("indicative-utils");
/**
 * Converts a string to a URL friendly slug. If value is not a string, it will be
 * returned as it is.
 *
 * Also it will handle ascii charmaps and converts them to their utf-8 counter parts.
 *
 * ```text
 * I am > than you
 * ```
 *
 * will become
 *
 * ```text
 * i-am-greater-than-you
 * ```
 *
 * ```ts
 * import { sanitizations } from 'indicative/sanitizer'
 *
 * const sanitizationRules = {
 *   slug: 'slug'
 * }
 *
 * // or
 * const sanitizationRules = {
 *   slug: [
 *     sanitizations.slug()
 *   ]
 * }
 * ```
 */
const slug = {
    sanitize(data, field) {
        let fieldValue = indicative_utils_1.getValue(data, field);
        if (typeof (fieldValue) !== 'string') {
            return;
        }
        indicative_utils_1.patchValue(data, field, slug_1.default(fieldValue));
    },
};
exports.default = slug;
