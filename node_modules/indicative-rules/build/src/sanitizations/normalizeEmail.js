"use strict";
/**
 * @module indicative-rules
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const indicative_utils_1 = require("indicative-utils");
const normalizeEmail_1 = __importDefault(require("validator/lib/normalizeEmail"));
/**
 * Normalizes the email address by removing unwanted characters from it. For
 * example `foo+bar@gmail.com` will become `foobar@gmail.com` and also it
 * will normalize the characters case too.
 *
 * If value is not a string, it will be returned as it is, otherwise it is
 * passed to [validator.js](https://github.com/chriso/validator.js)
 * normalizeEmail method.
 *
 * ```ts
 * import { sanitizations } from 'indicative/sanitizer'
 *
 * const sanitizationRules = {
 *   email: [
 *     sanitizations.normalizeEmail()
 *   ]
 * }
 *
 * // pass options
 * const sanitizationRules = {
 *   email: [
 *     sanitizations.normalizeEmail([{
 *       all_lowercase: true,
 *       icloud_remove_subaddress: true
 *     }])
 *   ]
 * }
 * ```
 */
const normalizeEmail = {
    sanitize(data, field, args = []) {
        let fieldValue = indicative_utils_1.getValue(data, field);
        if (typeof (fieldValue) !== 'string') {
            return;
        }
        indicative_utils_1.patchValue(data, field, normalizeEmail_1.default(fieldValue, args[0]));
    },
};
exports.default = normalizeEmail;
