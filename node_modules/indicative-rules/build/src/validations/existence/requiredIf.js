"use strict";
/*
* indicative-rules
*
* (c) Harminder Virk <virk@adonisjs.com>
*
* For the full copyright and license information, please view the LICENSE
* file that was distributed with this source code.
*/
Object.defineProperty(exports, "__esModule", { value: true });
const indicative_utils_1 = require("indicative-utils");
const empty_1 = require("../../raw/empty");
const existy_1 = require("../../raw/existy");
const MISSING_VALUE = 'requiredIf:make sure to define target field';
/**
 * Enforces the field value to exist when the target field exists. For example:
 * Ask for `address` when value for `needs_delivery` exists.
 *
 * ```ts
 * import { validations } from 'indicative/validator'
 *
 * const rules = {
 *   address: 'required_if:needs_delivery'
 * }
 *
 * // or
 * const rules = {
 *   address: [
 *     validations.requiredIf(['needs_delivery'])
 *   ]
 * }
 * ```
 */
const validation = {
    async: false,
    compile(args) {
        indicative_utils_1.ensureLength(args, MISSING_VALUE, 1);
        return [String(args[0])];
    },
    validate: (data, field, [targetField]) => {
        if (!existy_1.existy(indicative_utils_1.getValue(data, targetField))) {
            return true;
        }
        return !empty_1.empty(indicative_utils_1.getValue(data, field));
    },
};
exports.default = validation;
