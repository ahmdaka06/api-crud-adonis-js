"use strict";
/*
* indicative-rules
*
* (c) Harminder Virk <virk@adonisjs.com>
*
* For the full copyright and license information, please view the LICENSE
* file that was distributed with this source code.
*/
Object.defineProperty(exports, "__esModule", { value: true });
const indicative_utils_1 = require("indicative-utils");
const inArray_1 = require("../../raw/inArray");
const MISSING_VALUE = 'in:make sure to define search collection';
/**
 * Enforces the field value to be one of the allowed values.
 *
 * ```ts
 * import { validations } from 'indicative/validator'
 *
 * const rules = {
 *   post_status: 'in:draft,published'
 * }
 *
 * // or
 * const rules = {
 *   post_status: [
 *     validations.in(['draft', 'published'])
 *   ]
 * }
 * ```ts
 */
const validation = {
    async: false,
    compile(args) {
        indicative_utils_1.ensureLength(args, MISSING_VALUE, 1);
        return args;
    },
    validate: (data, field, args, config) => {
        const fieldValue = indicative_utils_1.getValue(data, field);
        return indicative_utils_1.skippable(fieldValue, field, config) || inArray_1.inArray(fieldValue, args);
    },
};
exports.default = validation;
