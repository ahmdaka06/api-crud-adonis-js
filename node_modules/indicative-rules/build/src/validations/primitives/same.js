"use strict";
/*
* indicative-rules
*
* (c) Harminder Virk <virk@adonisjs.com>
*
* For the full copyright and license information, please view the LICENSE
* file that was distributed with this source code.
*/
Object.defineProperty(exports, "__esModule", { value: true });
const indicative_utils_1 = require("indicative-utils");
const existy_1 = require("../../raw/existy");
const MISSING_VALUE = 'same:make sure to define target field for comparison';
/**
 * Enforces the field value to be same as the targeted field
 * value.
 *
 * ```ts
 * import { validations } from 'indicative/validator'
 *
 * const rules = {
 *   password_confirmation: 'same:password'
 * }
 *
 * // or
 * const rules = {
 *   password_confirmation: [
 *     validations.same(['password'])
 *   ]
 * }
 * ```
 */
const validation = {
    async: false,
    compile(args) {
        indicative_utils_1.ensureLength(args, MISSING_VALUE, 1);
        return [String(args[0])];
    },
    validate: (data, field, [targetField], config) => {
        const fieldValue = indicative_utils_1.getValue(data, field);
        if (indicative_utils_1.skippable(fieldValue, field, config)) {
            return true;
        }
        const targetedFieldValue = indicative_utils_1.getValue(data, targetField);
        return !existy_1.existy(targetedFieldValue) || targetedFieldValue === fieldValue;
    },
};
exports.default = validation;
