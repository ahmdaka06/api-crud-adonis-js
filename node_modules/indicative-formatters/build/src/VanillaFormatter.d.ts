/**
 * @module indicative-formatters
 */
import { ParsedRule } from 'indicative-parser';
import { ErrorFormatterContract } from 'indicative-compiler';
/**
 * Shape of error node
 */
export declare type VanillaErrorNode = {
    message: string;
    validation: string;
    field: string;
};
/**
 * Vanilla formatter is a plain formatter to collect validation
 * errors
 */
export declare class VanillaFormatter implements ErrorFormatterContract {
    errors: VanillaErrorNode[];
    /**
     * Adds error to the list of existing errors
     */
    addError(error: Error | string, field: string, rule: ParsedRule['name']): void;
    /**
     * Returns an array of errors or `null` when there are no
     * errors
     */
    toJSON(): VanillaErrorNode[] | null;
}
